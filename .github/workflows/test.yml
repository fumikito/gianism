name: Deploy Plugin

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ ubuntu-latest ]  # OS. ubuntu-18.04 is also available.
        php: [ '7.4' ] # PHP versions to check.
        wp: [ 'latest', '5.9' ]      # WordPress version to check.
    uses: tarosky/workflows/.github/workflows/wp-unit-test.yml@main
    with:
      php_version: ${{ matrix.php }}
      wp_version: ${{ matrix.wp }}

  lint:
    name: PHP Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Setup PHP with composer v2
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          tools: composer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Check PHP syntax
        run: composer lint

  analyze:
    name: Check PHP code quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Setup PHP with composer v2
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          tools: composer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP Stan
        run: composer analyze:github

  phplint:
    uses: tarosky/workflows/.github/workflows/phplint.yml@main
    with:
      install_command: "composer install --no-dev && php bin/composer-fixer.php"

  assets:
    name: Assets Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install NPM Packages
        run: npm install

      - name: Check JS & CSS syntax
        run: npm run lint

      - name: Ensure build works
        run: npm run package

  status-check:
    name: Status Check
    needs: [ test, assets, lint, analyze, phplint ]
    runs-on: ubuntu-latest
    steps:
    - uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

  deploy:
    name: Deploy Gianism.info
    needs: [ status-check ]
    if: contains(github.ref, 'master') && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP with composer v2
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          tools: composer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Build Plugin
        run: bash bin/build.sh refs/tags/${{ github.sha }}

      - name: Deploy with Rsync
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{secrets.GIANISM_XSERVER}}
        with:
          flags: '-rptv --checksum --delete'
          options: '--exclude-from=.distignore'
          ssh_options: '-p 10022'
          src: "./"
          dest: "gianism002@sv14500.xserver.jp:/home/gianism002/gianism.info/public_html/wp-content/plugins/gianism/"

  release:
    name: Deploy WordPress.org
    needs: [ status-check ]
    if: contains(github.ref, 'tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP with composer v2
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.2
          tools: composer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Build Plugin
        run: bash bin/build.sh ${{ github.ref }}

      - name: Deploy to WordPress Directory
        id: deploy
        uses: 10up/action-wordpress-plugin-deploy@stable
        with:
          generate-zip: true
        env:
          SVN_USERNAME: ${{ secrets.WPORG_FUMIKI_USERNAME }}
          SVN_PASSWORD: ${{ secrets.WPORG_FUMIKI_PASSWORD }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip
